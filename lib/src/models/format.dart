///
/// Possible values for format of a Pastebin [Paste]
///
enum Format {
  cs4,
  acme6502,
  kickass6502,
  tasm6502,
  abap,
  actionscript,
  actionscript3,
  ada,
  aimms,
  algol68,
  apache,
  applescript,
  aptSources,
  arduino,
  arm,
  asm,
  asp,
  asymptote,
  autoconf,
  autohotkey,
  autoit,
  avisynth,
  awk,
  bascomavr,
  bash,
  basic4gl,
  dos,
  bibtex,
  b3d,
  blitzbasic,
  bmx,
  bnf,
  boo,
  bf,
  c,
  csharp,
  cWinapi,
  cpp,
  cppWinapi,
  cppQt,
  cLoadrunner,
  caddcl,
  cadlisp,
  ceylon,
  cfdg,
  cMac,
  chaiscript,
  chapel,
  cil,
  clojure,
  klonec,
  klonecpp,
  cmake,
  cobol,
  coffeescript,
  cfm,
  css,
  cuesheet,
  d,
  dart,
  dcl,
  dcpu16,
  dcs,
  delphi,
  oxygene,
  diff,
  div,
  dot,
  e,
  ezt,
  ecmascript,
  eiffel,
  email,
  epc,
  erlang,
  euphoria,
  fsharp,
  falcon,
  filemaker,
  fo,
  f1,
  fortran,
  freebasic,
  freeswitch,
  gambas,
  gml,
  gdb,
  genero,
  genie,
  gettext,
  go,
  groovy,
  gwbasic,
  haskell,
  haxe,
  hicest,
  hq9plus,
  html4strict,
  html5,
  icon,
  idl,
  ini,
  inno,
  intercal,
  io,
  ispfpanel,
  j,
  java,
  java5,
  javascript,
  jcl,
  jquery,
  json,
  julia,
  kixtart,
  kotlin,
  latex,
  ldif,
  lb,
  lsl2,
  lisp,
  llvm,
  locobasic,
  logtalk,
  lolcode,
  lotusformulas,
  lotusscript,
  lscript,
  lua,
  m68k,
  magiksf,
  make,
  mapbasic,
  markdown,
  matlab,
  mirc,
  mmix,
  modula2,
  modula3,
  devpac68000,
  mpasm,
  mxml,
  mysql,
  nagios,
  netrexx,
  newlisp,
  nginx,
  nim,
  nsis,
  oberon2,
  objeck,
  objc,
  ocaml,
  ocamlBrief,
  octave,
  pf,
  glsl,
  oorexx,
  oobas,
  oracle8,
  oracle11,
  oz,
  parasail,
  parigp,
  pascal,
  pawn,
  pcre,
  per,
  perl,
  perl6,
  php,
  phpBrief,
  pic16,
  pike,
  pixelbender,
  pli,
  plsql,
  postgresql,
  postscript,
  povray,
  powerbuilder,
  powershell,
  proftpd,
  progress,
  prolog,
  properties,
  providex,
  puppet,
  purebasic,
  pycon,
  python,
  pys60,
  q,
  qbasic,
  qml,
  rsplus,
  racket,
  rails,
  rbs,
  rebol,
  reg,
  rexx,
  robots,
  rpmspec,
  ruby,
  gnuplot,
  rust,
  sas,
  scala,
  scheme,
  scilab,
  scl,
  sdlbasic,
  smalltalk,
  smarty,
  spark,
  sparql,
  sqf,
  sql,
  standardml,
  stonescript,
  sclang,
  swift,
  systemverilog,
  tsql,
  tcl,
  teraterm,
  thinbasic,
  typoscript,
  unicon,
  uscript,
  upc,
  urbi,
  vala,
  vbnet,
  vbscript,
  vedit,
  verilog,
  vhdl,
  vim,
  vb,
  visualfoxpro,
  visualprolog,
  whitespace,
  whois,
  winbatch,
  xbasic,
  xml,
  xorgConf,
  xpp,
  yaml,
  yara,
  z80,
  zxbasic
}

extension FormatExtension on Format? {
  static const Map<Format, String> values = {
    Format.cs4: '4cs',
    Format.acme6502: '6502acme',
    Format.kickass6502: '6502kickass',
    Format.tasm6502: '6502tasm',
    Format.abap: 'abap',
    Format.actionscript: 'actionscript',
    Format.actionscript3: 'actionscript3',
    Format.ada: 'ada',
    Format.aimms: 'aimms',
    Format.algol68: 'algol68',
    Format.apache: 'apache',
    Format.applescript: 'applescript',
    Format.aptSources: 'apt_sources',
    Format.arduino: 'arduino',
    Format.arm: 'arm',
    Format.asm: 'asm',
    Format.asp: 'asp',
    Format.asymptote: 'asymptote',
    Format.autoconf: 'autoconf',
    Format.autohotkey: 'autohotkey',
    Format.autoit: 'autoit',
    Format.avisynth: 'avisynth',
    Format.awk: 'awk',
    Format.bascomavr: 'bascomavr',
    Format.bash: 'bash',
    Format.basic4gl: 'basic4gl',
    Format.dos: 'dos',
    Format.bibtex: 'bibtex',
    Format.b3d: 'b3d',
    Format.blitzbasic: 'blitzbasic',
    Format.bmx: 'bmx',
    Format.bnf: 'bnf',
    Format.boo: 'boo',
    Format.bf: 'bf',
    Format.c: 'c',
    Format.csharp: 'csharp',
    Format.cWinapi: 'c_winapi',
    Format.cpp: 'cpp',
    Format.cppWinapi: 'cpp-winapi',
    Format.cppQt: 'cpp-qt',
    Format.cLoadrunner: 'c_loadrunner',
    Format.caddcl: 'caddcl',
    Format.cadlisp: 'cadlisp',
    Format.ceylon: 'ceylon',
    Format.cfdg: 'cfdg',
    Format.cMac: 'c_mac',
    Format.chaiscript: 'chaiscript',
    Format.chapel: 'chapel',
    Format.cil: 'cil',
    Format.clojure: 'clojure',
    Format.klonec: 'klonec',
    Format.klonecpp: 'klonecpp',
    Format.cmake: 'cmake',
    Format.cobol: 'cobol',
    Format.coffeescript: 'coffeescript',
    Format.cfm: 'cfm',
    Format.css: 'css',
    Format.cuesheet: 'cuesheet',
    Format.d: 'd',
    Format.dart: 'dart',
    Format.dcl: 'dcl',
    Format.dcpu16: 'dcpu16',
    Format.dcs: 'dcs',
    Format.delphi: 'delphi',
    Format.oxygene: 'oxygene',
    Format.diff: 'diff',
    Format.div: 'div',
    Format.dot: 'dot',
    Format.e: 'e',
    Format.ezt: 'ezt',
    Format.ecmascript: 'ecmascript',
    Format.eiffel: 'eiffel',
    Format.email: 'email',
    Format.epc: 'epc',
    Format.erlang: 'erlang',
    Format.euphoria: 'euphoria',
    Format.fsharp: 'fsharp',
    Format.falcon: 'falcon',
    Format.filemaker: 'filemaker',
    Format.fo: 'fo',
    Format.f1: 'f1',
    Format.fortran: 'fortran',
    Format.freebasic: 'freebasic',
    Format.freeswitch: 'freeswitch',
    Format.gambas: 'gambas',
    Format.gml: 'gml',
    Format.gdb: 'gdb',
    Format.genero: 'genero',
    Format.genie: 'genie',
    Format.gettext: 'gettext',
    Format.go: 'go',
    Format.groovy: 'groovy',
    Format.gwbasic: 'gwbasic',
    Format.haskell: 'haskell',
    Format.haxe: 'haxe',
    Format.hicest: 'hicest',
    Format.hq9plus: 'hq9plus',
    Format.html4strict: 'html4strict',
    Format.html5: 'html5',
    Format.icon: 'icon',
    Format.idl: 'idl',
    Format.ini: 'ini',
    Format.inno: 'inno',
    Format.intercal: 'intercal',
    Format.io: 'io',
    Format.ispfpanel: 'ispfpanel',
    Format.j: 'j',
    Format.java: 'java',
    Format.java5: 'java5',
    Format.javascript: 'javascript',
    Format.jcl: 'jcl',
    Format.jquery: 'jquery',
    Format.json: 'json',
    Format.julia: 'julia',
    Format.kixtart: 'kixtart',
    Format.kotlin: 'kotlin',
    Format.latex: 'latex',
    Format.ldif: 'ldif',
    Format.lb: 'lb',
    Format.lsl2: 'lsl2',
    Format.lisp: 'lisp',
    Format.llvm: 'llvm',
    Format.locobasic: 'locobasic',
    Format.logtalk: 'logtalk',
    Format.lolcode: 'lolcode',
    Format.lotusformulas: 'lotusformulas',
    Format.lotusscript: 'lotusscript',
    Format.lscript: 'lscript',
    Format.lua: 'lua',
    Format.m68k: 'm68k',
    Format.magiksf: 'magiksf',
    Format.make: 'make',
    Format.mapbasic: 'mapbasic',
    Format.markdown: 'markdown',
    Format.matlab: 'matlab',
    Format.mirc: 'mirc',
    Format.mmix: 'mmix',
    Format.modula2: 'modula2',
    Format.modula3: 'modula3',
    Format.devpac68000: '68000devpac',
    Format.mpasm: 'mpasm',
    Format.mxml: 'mxml',
    Format.mysql: 'mysql',
    Format.nagios: 'nagios',
    Format.netrexx: 'netrexx',
    Format.newlisp: 'newlisp',
    Format.nginx: 'nginx',
    Format.nim: 'nim',
    Format.nsis: 'nsis',
    Format.oberon2: 'oberon2',
    Format.objeck: 'objeck',
    Format.objc: 'objc',
    Format.ocaml: 'ocaml',
    Format.ocamlBrief: 'ocaml-brief',
    Format.octave: 'octave',
    Format.pf: 'pf',
    Format.glsl: 'glsl',
    Format.oorexx: 'oorexx',
    Format.oobas: 'oobas',
    Format.oracle8: 'oracle8',
    Format.oracle11: 'oracle11',
    Format.oz: 'oz',
    Format.parasail: 'parasail',
    Format.parigp: 'parigp',
    Format.pascal: 'pascal',
    Format.pawn: 'pawn',
    Format.pcre: 'pcre',
    Format.per: 'per',
    Format.perl: 'perl',
    Format.perl6: 'perl6',
    Format.php: 'php',
    Format.phpBrief: 'php-brief',
    Format.pic16: 'pic16',
    Format.pike: 'pike',
    Format.pixelbender: 'pixelbender',
    Format.pli: 'pli',
    Format.plsql: 'plsql',
    Format.postgresql: 'postgresql',
    Format.postscript: 'postscript',
    Format.povray: 'povray',
    Format.powerbuilder: 'powerbuilder',
    Format.powershell: 'powershell',
    Format.proftpd: 'proftpd',
    Format.progress: 'progress',
    Format.prolog: 'prolog',
    Format.properties: 'properties',
    Format.providex: 'providex',
    Format.puppet: 'puppet',
    Format.purebasic: 'purebasic',
    Format.pycon: 'pycon',
    Format.python: 'python',
    Format.pys60: 'pys60',
    Format.q: 'q',
    Format.qbasic: 'qbasic',
    Format.qml: 'qml',
    Format.rsplus: 'rsplus',
    Format.racket: 'racket',
    Format.rails: 'rails',
    Format.rbs: 'rbs',
    Format.rebol: 'rebol',
    Format.reg: 'reg',
    Format.rexx: 'rexx',
    Format.robots: 'robots',
    Format.rpmspec: 'rpmspec',
    Format.ruby: 'ruby',
    Format.gnuplot: 'gnuplot',
    Format.rust: 'rust',
    Format.sas: 'sas',
    Format.scala: 'scala',
    Format.scheme: 'scheme',
    Format.scilab: 'scilab',
    Format.scl: 'scl',
    Format.sdlbasic: 'sdlbasic',
    Format.smalltalk: 'smalltalk',
    Format.smarty: 'smarty',
    Format.spark: 'spark',
    Format.sparql: 'sparql',
    Format.sqf: 'sqf',
    Format.sql: 'sql',
    Format.standardml: 'standardml',
    Format.stonescript: 'stonescript',
    Format.sclang: 'sclang',
    Format.swift: 'swift',
    Format.systemverilog: 'systemverilog',
    Format.tsql: 'tsql',
    Format.tcl: 'tcl',
    Format.teraterm: 'teraterm',
    Format.thinbasic: 'thinbasic',
    Format.typoscript: 'typoscript',
    Format.unicon: 'unicon',
    Format.uscript: 'uscript',
    Format.upc: 'upc',
    Format.urbi: 'urbi',
    Format.vala: 'vala',
    Format.vbnet: 'vbnet',
    Format.vbscript: 'vbscript',
    Format.vedit: 'vedit',
    Format.verilog: 'verilog',
    Format.vhdl: 'vhdl',
    Format.vim: 'vim',
    Format.vb: 'vb',
    Format.visualfoxpro: 'visualfoxpro',
    Format.visualprolog: 'visualprolog',
    Format.whitespace: 'whitespace',
    Format.whois: 'whois',
    Format.winbatch: 'winbatch',
    Format.xbasic: 'xbasic',
    Format.xml: 'xml',
    Format.xorgConf: 'xorg_conf',
    Format.xpp: 'xpp',
    Format.yaml: 'yaml',
    Format.yara: 'yara',
    Format.z80: 'z80',
    Format.zxbasic: 'zxbasic',
  };

  static Format parse(
    final String? format,
    final MapEntry<Format, String>? Function() onError,
  ) {
    return values.entries
        .firstWhere((entry) => entry.value == format, orElse: onError as MapEntry<Format, String> Function()?)
        .key;
  }

  static Format tryParse(final String? format) => parse(format, () => null);

  String? value() {
    return values[this!];
  }
}
